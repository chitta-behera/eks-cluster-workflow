# Define the API version and kind of resource
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# Template metadata. Here's your intro to what this template does.
metadata:
  name: create-postgresql-db
  title: Create PostgreSQL DB via Kratix
  description: Creates a PostgreSQL DB using Kratix Promise
# The specification for how the template behaves
spec:
  # Who owns this template. Generally, it could be a team or individual
  owner: group:ADP-Project
  # The type of service this template deploys
  type: service
  # User-input parameters. Makes your templates dynamic!
  parameters:
    # Ask the user to input some basic app details
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: DB Name
          type: string
          description: Unique name for your db
          ui:autofocus: true  # This field gets auto-focused in UI
  # Steps that the template will execute in order
  steps:
    - id: apply-resource
      name: Apply Kratix PostgreSQL Resource
      action: kubernetes:apply
      input:
        manifests:
          - |
            apiVersion: platform.kratix.io/v1alpha1
            kind: postgresql
            metadata:
              name: example
              namespace: default
            spec:
              env: dev
              teamId: acme-org-team-a
              dbName: ${{ parameters.name }}
              backupEnabled: false
        kubeConfig:
          # Use one of the following depending on your setup
          # 1. Provide clusterRef:
          clusterRef:
            name: kind-platform
    
  # Output links to the user after the template execution
  output:
    message: "Database has been created via Kratix..."
